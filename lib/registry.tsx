'use client'

import React, { useState } from 'react'
import { useServerInsertedHTML } from 'next/navigation'
import { ServerStyleSheet, StyleSheetManager } from 'styled-components'

export default function StyledComponentsRegistry({
  children,
  nonce,
}: {
  children: React.ReactNode
  nonce: string
}) {
  // Only create stylesheet once with lazy initial state
  // x-ref: https://reactjs.org/docs/hooks-reference.html#lazy-initial-state
  const [styledComponentsStyleSheet] = useState(() => new ServerStyleSheet())

  // Insert styles during server-side rendering
  useServerInsertedHTML(() => {
    const styles = styledComponentsStyleSheet
      .getStyleElement()
      .map((style) => React.cloneElement(style, { nonce }))
    styledComponentsStyleSheet.instance.clearTag()
    return <>{styles}</>
  })

  // During client-side rendering, ensure the nonce is available
  if (typeof window !== 'undefined') {
    // Check and reapply nonce to styles generated by styled-components
    document.querySelectorAll('style[data-styled]').forEach((styleTag) => {
      if (!styleTag.getAttribute('nonce')) {
        styleTag.setAttribute('nonce', nonce || '')
      }
    })
  }

  if (typeof window !== 'undefined') {
    return <>{children}</>
  }

  return (
    <StyleSheetManager sheet={styledComponentsStyleSheet.instance}>
      {children}
    </StyleSheetManager>
  )
}
